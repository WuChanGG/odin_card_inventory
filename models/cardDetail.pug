extends layout

block content
    h1 Card Details
    div(class="container-fluid")
        // render the card
        if (data.creatureCard !== undefined)
            - let card = data.CreatureCard
            div(class="card border-dark mb-1")
                // Base card members
                div(class="text-success bg-dark") Name
                div(class="bg-primary") !{card.baseCard.name}
                div(class="text-success bg-dark") Burn Color: 
                div(class="bg-primary") !{card.baseCard.color}
                div(class="text-success bg-dark") Required Gems:
                    each gem, index in card.baseCard.requiredGems
                            div(class="text-dark bg-primary") !{gem}
                div(class="text-success bg-dark") Mana Cost:
                div(class="bg-primary") !{card.baseCard.manaCost}
                div(class="text-success bg-dark") Rarity:
                div(class="bg-primary") !{card.baseCard.rarity}
                // Child of base card members (creature)
                div(class="text-success bg-dark") Strength:
                div(class="bg-primary") !{card.strength}
                div(class="text-success bg-dark") Health:
                div(class="bg-primary") !{card.health}
                div(class="text-success bg-dark") Effects:
                div(class="bg-primary") !{card.effects}
        else if (data.spellCard !== undefined)
            - let card = data.spellCard
            div(class="card border-dark mb-1")
                // Base card members
                div(class="text-success bg-dark") Name
                div(class="bg-primary") !{card.baseCard.name}
                div(class="text-success bg-dark") Burn Color: 
                div(class="bg-primary") !{card.baseCard.color}
                div(class="text-success bg-dark") Required Gems:
                    each gem, index in card.baseCard.requiredGems
                            div(class="text-dark bg-primary") !{gem}
                div(class="text-success bg-dark") Mana Cost:
                div(class="bg-primary") !{card.baseCard.manaCost}
                div(class="text-success bg-dark") Rarity:
                div(class="bg-primary") !{card.baseCard.rarity}
                // Child of base card members (creature)
                div(class="text-success bg-dark") Effects:
                div(class="bg-primary") !{card.effects}
        else if (data.artifactCard !== undefined)
            - let card = data.artifactCard
            div(class="card border-dark mb-1")
                // Base card members
                div(class="text-success bg-dark") Name
                div(class="bg-primary") !{card.baseCard.name}
                div(class="text-success bg-dark") Burn Color: 
                div(class="bg-primary") !{card.baseCard.color}
                div(class="text-success bg-dark") Required Gems:
                    each gem, index in card.baseCard.requiredGems
                            div(class="text-dark bg-primary") !{gem}
                div(class="text-success bg-dark") Mana Cost:
                div(class="bg-primary") !{card.baseCard.manaCost}
                div(class="text-success bg-dark") Rarity:
                div(class="bg-primary") !{card.baseCard.rarity}
                // Child of base card members (creature)
                div(class="text-success bg-dark") Effects:
                div(class="bg-primary") !{card.effects}
                div(class="text-success bg-dark") Initial Energy:
                div(class="bg-primary") !{card.energy}
        else
            p Card not found.